[tool.poetry]
name = "jacobson"
version = "0.3.0"
description = "self-hosted zipcode API"
authors = ["Christian G. Semke <chrisemke@protonmail.com>"]
license = "AGPL-3.0-or-later"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.*"
uvicorn = {extras = ["standard"], version = "^0.30.6"}
fastapi-slim = "^0.112.2"
strawberry-graphql = {extras = ["fastapi"], version = "^0.239.2"}
httpx = "^0.27.2"
pydantic = "^2.8.2"
alembic = "^1.13.2"
psycopg = {extras = ["binary"], version = "^3.2.1"}
pydantic-settings = "^2.4.0"
sqlmodel = "^0.0.22"
email-validator = "^2.2.0"
pyjwt = "^2.9.0"
pwdlib = {extras = ["argon2"], version = "^0.2.1"}

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
ruff = "^0.6.3"
mypy = "^1.11.2"
commitizen = "^3.29.0"
poetry-plugin-export = "^1.8.0"
fastapi = {extras = ["standard"], version = "^0.112.2"}
strawberry-graphql = {extras = ["cli"], version = "^0.239.2"}
taskipy = "^1.13.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.34"
mkdocstrings = {extras = ["python"], version = "^0.26.0"}
mkdocs-site-urls = "^0.2.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.24.0"
respx = "^0.21.1"
testcontainers = {extras = ["postgres"], version = "^4.8.1"}
factory-boy = "^3.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
strict = true
explicit_package_bases = true
exclude = ["build", "docker", "tests"]
plugins = ["pydantic.mypy", "strawberry.ext.mypy_plugin"]

[tool.ruff]
indent-width = 1
line-length = 79
target-version = "py312"

[tool.ruff.lint]
select = [
	"E",     # pydocstyle
	"W",     # pydocstyle
	"F",     # pyflakes
	"I",     # isort
	"PL",    # Pylint
	"UP",    # pyupgrade
	"D",     # docstrings
	"RUF",   # ruff
	"ASYNC", # flake8-async
	"PT",    # flake8-pytest-style
]
ignore = [
	"D100", # Missing docstring in public module
	"D101", # Missing docstring in public class
	"D104", # Missing docstring in public package
	"D105", # Missing docstring in magic method
	"D203", # 1 blank line required before class docstring
	"D205", # 1 blank line required between summary line and description
	"D211", # no-blank-line-before-class
	"D212", # Multi-line docstring summary should start at the first line
	"D206", # Docstring should be indented with spaces, not tabs
	"D407", # Missing dashed underline after section
	"W191", # Indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D102", "D103", "D106"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
indent-style = "tab"
quote-style = "single"
docstring-code-format = true

[tool.pytest.ini_options]
minversion = "8.2"
addopts = "-vv --no-header -p no:warnings"
asyncio_mode = 'auto'
testpaths = ["tests"]

[tool.taskipy.variables]
container = "podman"

[tool.taskipy.tasks]
build = {cmd = "{container} compose up -d --build", help = "Build containers", use_vars = true}
up = {cmd = "{container} compose up -d", help = "Run containers", use_vars = true}
down = {cmd = "{container} compose down", help = "Turn off containers", use_vars = true}
logs = {cmd = "{container} logs -f -t --color jacobson_app_1", help = "Show api container logs", use_vars = true}
restart = {cmd = "task down; task up", help = "Restart running containers"}

docs_serve = {cmd = "mkdocs serve -w . -a localhost:8008", help = "Serve mkdocs watch all files"}
pre_docs_deploy = {cmd = "mkdocs build", help = "Build mkdocs"}
docs_deploy = {cmd = "mkdocs gh-deploy -b pages", help = "Deploy mkdocs on branch pages"}

hooks = {cmd = "pre-commit run --all-files", help = "Run htoolooks on all files"}
autoupdate_hooks = {cmd = "pre-commit autoupdate", help = "Auto update git hooks"}

post_test = {cmd = "coverage html", help = "Generate coverage html"}
[tool.taskipy.tasks.test]
cmd = "DOCKER_HOST=unix:///run/user/$UID/podman/podman.sock TESTCONTAINERS_RYUK_DISABLED=true pytest --cov=."
help = "Run all tests in current directory"
