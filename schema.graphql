directive @isAuthenticated on FIELD_DEFINITION

type Address {
  city: City!
  state: State!
  zipcode: Int!
  neighborhood: String!
  complement: String
  coordinates: JSON
}

input AddressFilterInput {
  city: CityInput = null
  state: StateInput = null
  zipcode: Int = null
  neighborhood: String = null
  complement: String = null
  coordinates: CoordinatesInput = null
}

input AddressInsertInput {
  state: StateInput!
  city: CityInput!
  zipcode: Int!
  neighborhood: String!
  complement: String = null
  coordinates: CoordinatesInput = null
}

type City {
  ibge: Int!
  name: String!
  ddd: Int
}

input CityInput {
  ibge: Int!
  name: String
  ddd: Int = null
}

input CoordinatesInput {
  latitude: Float!
  longitude: Float!
  altitude: Float = null
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf).
"""
scalar JSON @specifiedBy(url: "https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf")

input LoginInput {
  email: String = null
  username: String = null
  password: String!
}

type LoginType {
  jwt: String!
  email: String!
  username: String!
  id: UUID
}

type Mutation {
  createAddress(address: AddressInsertInput!): Address! @isAuthenticated
  refreshToken: String @isAuthenticated
  login(loginData: LoginInput!): LoginType!
  register(registerData: UserRegisterInput!): LoginType!
}

type Query {
  allAddress(filter: AddressFilterInput!, pageSize: Int! = 10, pageNumber: Int! = 1): [Address!]! @isAuthenticated
}

type State {
  acronym: StateAcronym!
  name: String!
}

enum StateAcronym {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}

input StateInput {
  acronym: StateAcronym!
  name: String
}

scalar UUID

input UserRegisterInput {
  email: String!
  username: String!
  password: String!
}
